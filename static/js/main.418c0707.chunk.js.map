{"version":3,"sources":["types/FilterOptions.tsx","store/TodosContext.tsx","components/TodoHeader/TodoHeader.tsx","components/TodoList/TodoItem.tsx","components/TodoList/TodoList.tsx","utils/getVisibleTodos.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","hooks/useLocalStorage.tsx","index.tsx"],"names":["FilterOptions","TodosContext","React","createContext","todos","filter","ALL","setTodos","setFilter","TodoHeader","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useContext","useContext","validQuery","trim","_jsxs","className","children","_jsx","onSubmit","event","preventDefault","newTodo","id","Date","title","completed","concat","_toConsumableArray","addTodo","type","placeholder","value","onChange","target","TodoItem","_ref","currentTodo","newTitle","setNewTitle","_useState3","_useState4","isDbCclicked","setIsDbClicked","inputRef","useRef","handleDeleteTodo","todo","saveNewTitle","map","_objectSpread","useEffect","current","focus","classNames","editing","checked","onClick","onDoubleClick","ref","onBlur","onKeyUp","key","TodoList","isAllComplited","every","visibleTodos","useMemo","getVisibleTodos","length","_Fragment","active","htmlFor","TodoFilter","leftTodos","isCompleted","some","Object","values","option","href","toLowerCase","selected","App","_useLocalStorage","startValue","setValue","data","localStorage","getItem","JSON","parse","newValue","setItem","stringify","useLocalStorage","_useLocalStorage2","Provider","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.418c0707.chunk.js","sourcesContent":["export enum FilterOptions {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { FilterOptions } from '../types/FilterOptions';\n\ntype Props = {\n  todos: Todo[];\n  filter: FilterOptions\n  setTodos: (newTodos: Todo[]) => void;\n  setFilter: (filter: FilterOptions) => void;\n};\n\nexport const TodosContext = React.createContext<Props>({\n  todos: [],\n  filter: FilterOptions.ALL,\n  setTodos: () => {},\n  setFilter: () => {},\n});\n","import React, { useState, useContext } from 'react';\nimport { TodosContext } from '../../store/TodosContext';\n\nexport const TodoHeader: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const validQuery = query.trim();\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const addTodo = () => {\n    const newTodo = {\n      id: +new Date(),\n      title: query,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!validQuery) {\n      return;\n    }\n\n    addTodo();\n    setQuery('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../store/TodosContext';\n\ntype Props = {\n  currentTodo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ currentTodo }) => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [newTitle, setNewTitle] = useState(currentTodo.title);\n  const [isDbCclicked, setIsDbClicked] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { id, title, completed } = currentTodo;\n\n  const handleDbClick = () => setIsDbClicked(true);\n\n  const hendleUpdateStatus = () => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const handleDeleteTodo = () => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const saveNewTitle = () => {\n    setIsDbClicked(false);\n\n    if (!newTitle.trim()) {\n      handleDeleteTodo();\n\n      return;\n    }\n\n    if (newTitle === title) {\n      return;\n    }\n\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, title: newTitle };\n      }\n\n      return todo;\n    }));\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setNewTitle(title);\n      setIsDbClicked(false);\n    }\n\n    if (event.key === 'Enter') {\n      saveNewTitle();\n    }\n  };\n\n  useEffect(() => {\n    if (isDbCclicked && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isDbCclicked]);\n\n  return (\n    <li\n      className={classNames({\n        completed,\n        editing: isDbCclicked,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={completed}\n          onClick={hendleUpdateStatus}\n        />\n        <label onDoubleClick={handleDbClick}>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          aria-label=\"deleteTodo\"\n          onClick={handleDeleteTodo}\n        />\n      </div>\n      <input\n        type=\"text\"\n        ref={inputRef}\n        className=\"edit\"\n        value={newTitle}\n        placeholder=\"Empty todo will be removed\"\n        onChange={handleTitleChange}\n        onBlur={saveNewTitle}\n        onKeyUp={handleKeyUp}\n      />\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../store/TodosContext';\nimport { TodoItem } from './TodoItem';\nimport { getVisibleTodos } from '../../utils/getVisibleTodos';\n\nexport const TodoList: React.FC = () => {\n  const { todos, setTodos, filter } = useContext(TodosContext);\n\n  const isAllComplited = todos.every(todo => todo.completed);\n\n  const visibleTodos = useMemo(() => {\n    return getVisibleTodos(todos, filter);\n  }, [todos, filter]);\n\n  const toggleAllStatuses = () => {\n    if (isAllComplited) {\n      setTodos(todos.map(todo => {\n        return { ...todo, completed: false };\n      }));\n    } else {\n      setTodos(todos.map(todo => {\n        return { ...todo, completed: true };\n      }));\n    }\n  };\n\n  return (\n    <section className=\"main\">\n      {todos.length > 0 && (\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className={classNames('toggle-all', {\n              active: isAllComplited,\n            })}\n            data-cy=\"toggleAll\"\n            onClick={toggleAllStatuses}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\" data-cy=\"todosList\">\n            {visibleTodos.map(todo => (\n              <TodoItem currentTodo={todo} key={todo.id} />\n            ))}\n          </ul>\n        </>\n      )}\n    </section>\n  );\n};\n","import { FilterOptions } from '../types/FilterOptions';\nimport { Todo } from '../types/Todo';\n\nexport const getVisibleTodos = (todos: Todo[], filter: FilterOptions) => {\n  switch (filter) {\n    case 'Active':\n      return todos.filter(todo => !todo.completed);\n\n    case 'Completed':\n      return todos.filter(todo => todo.completed);\n\n    default:\n      return todos;\n  }\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../store/TodosContext';\nimport { FilterOptions } from '../../types/FilterOptions';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    todos,\n    filter,\n    setTodos,\n    setFilter,\n  } = useContext(TodosContext);\n  const leftTodos = todos.filter(todo => !todo.completed).length;\n  const isCompleted = todos.some(todo => todo.completed);\n  const normalizeHref = (href: string) => `#/${href.toLowerCase()}`;\n\n  const clearCompletedTodos = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${leftTodos} items left`}\n      </span>\n\n      <ul className=\"filters\" data-cy=\"todosFilter\">\n        {Object.values(FilterOptions).map(option => (\n          <li key={option}>\n            <a\n              href={option === FilterOptions.ALL ? '#/' : normalizeHref(option)}\n              className={classNames({\n                selected: filter === option,\n              })}\n              onClick={() => setFilter(option)}\n            >\n              {option}\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      {isCompleted && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompletedTodos}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","import React, { useState } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { Todo } from './types/Todo';\nimport { TodoHeader } from './components/TodoHeader/TodoHeader';\nimport { TodosContext } from './store/TodosContext';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoFilter } from './components/TodoFilter/TodoFilter';\nimport { FilterOptions } from './types/FilterOptions';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n  const [filter, setFilter] = useState(FilterOptions.ALL);\n\n  return (\n    <div className=\"todoapp\">\n      <TodosContext.Provider\n        value={{\n          todos,\n          filter,\n          setTodos,\n          setFilter,\n        }}\n      >\n        <TodoHeader />\n        <TodoList />\n        {todos.length > 0 && (<TodoFilter />)}\n      </TodosContext.Provider>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string,\n  startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(startValue);\n\n  useEffect(() => {\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      return;\n    }\n\n    setValue(JSON.parse(data));\n  }, []);\n\n  const save = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, save];\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nconst container = document.getElementById('root') as HTMLDivElement;\n\ncreateRoot(container).render(<App />);\n"],"sourceRoot":""}